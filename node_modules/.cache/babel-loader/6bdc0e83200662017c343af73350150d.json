{"ast":null,"code":"import React from'react';import App from\"./App\";import ApolloClient from\"apollo-client\";import{ApolloProvider}from'@apollo/react-hooks';import{createUploadLink}from\"apollo-upload-client\";import{InMemoryCache}from'apollo-cache-inmemory';import{onError}from\"apollo-link-error\";import{ApolloLink}from\"apollo-link\";import{setContext}from'apollo-link-context';import{jsx as _jsx}from\"react/jsx-runtime\";var httpLink=createUploadLink({uri:\"https://fast-eyrie-13923.herokuapp.com/graphql\"});var authLink=setContext(function(){var token=localStorage.getItem('jwtToken');return{headers:{Authorization:token?\"Bearer \".concat(token):''}};});var client=new ApolloClient({link:ApolloLink.from([// Report errors to console in a user friendly format\nonError(function(_ref){var graphQLErrors=_ref.graphQLErrors,networkError=_ref.networkError;if(graphQLErrors)graphQLErrors.map(function(_ref2){var message=_ref2.message,locations=_ref2.locations,path=_ref2.path;return console.log(\"[GraphQL error]: Message: \".concat(message,\", Location: \").concat(locations,\", Path: \").concat(path));});if(networkError)console.log(\"[Network error]: \".concat(networkError));}),authLink.concat(httpLink)]),cache:new InMemoryCache()});export default/*#__PURE__*/_jsx(ApolloProvider,{client:client,children:/*#__PURE__*/_jsx(App,{})});","map":{"version":3,"sources":["/home/jobilite/Desktop/hostel_client/src/ApolloProvider.js"],"names":["React","App","ApolloClient","ApolloProvider","createUploadLink","InMemoryCache","onError","ApolloLink","setContext","httpLink","uri","authLink","token","localStorage","getItem","headers","Authorization","client","link","from","graphQLErrors","networkError","map","message","locations","path","console","log","concat","cache"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAQC,CAAAA,YAAR,KAA0B,eAA1B,CACA,OAASC,cAAT,KAA+B,qBAA/B,CACA,OAASC,gBAAT,KAAiC,sBAAjC,CACA,OAASC,aAAT,KAA8B,uBAA9B,CACA,OAASC,OAAT,KAAwB,mBAAxB,CACA,OAASC,UAAT,KAA2B,aAA3B,CACA,OAASC,UAAT,KAA2B,qBAA3B,C,2CAEA,GAAMC,CAAAA,QAAQ,CAAGL,gBAAgB,CAAC,CAChCM,GAAG,iDAD6B,CAAD,CAAjC,CAIA,GAAMC,CAAAA,QAAQ,CAAGH,UAAU,CAAC,UAAM,CAChC,GAAMI,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd,CACA,MAAM,CACJC,OAAO,CAAC,CACNC,aAAa,CAAEJ,KAAK,kBAAaA,KAAb,EAAuB,EADrC,CADJ,CAAN,CAKD,CAP0B,CAA3B,CASA,GAAMK,CAAAA,MAAM,CAAG,GAAIf,CAAAA,YAAJ,CAAiB,CAC9BgB,IAAI,CAAEX,UAAU,CAACY,IAAX,CAAgB,CACpB;AACAb,OAAO,CAAC,cAAqC,IAAlCc,CAAAA,aAAkC,MAAlCA,aAAkC,CAAnBC,YAAmB,MAAnBA,YAAmB,CAC3C,GAAID,aAAJ,CACEA,aAAa,CAACE,GAAd,CAAkB,mBAAGC,CAAAA,OAAH,OAAGA,OAAH,CAAYC,SAAZ,OAAYA,SAAZ,CAAuBC,IAAvB,OAAuBA,IAAvB,OAChBC,CAAAA,OAAO,CAACC,GAAR,qCAC+BJ,OAD/B,wBACqDC,SADrD,oBACyEC,IADzE,EADgB,EAAlB,EAKF,GAAIJ,YAAJ,CAAkBK,OAAO,CAACC,GAAR,4BAAgCN,YAAhC,GACnB,CARM,CAFa,CAWrBV,QAAQ,CAACiB,MAAT,CAAgBnB,QAAhB,CAXqB,CAAhB,CADwB,CAc9BoB,KAAK,CAAE,GAAIxB,CAAAA,aAAJ,EAduB,CAAjB,CAAf,CAiBA,2BACE,KAAC,cAAD,EAAgB,MAAM,CAAEY,MAAxB,uBACE,KAAC,GAAD,IADF,EADF","sourcesContent":["import React from 'react';\nimport App from \"./App\";\nimport  ApolloClient from \"apollo-client\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { createUploadLink } from \"apollo-upload-client\";\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { onError } from \"apollo-link-error\";\nimport { ApolloLink } from \"apollo-link\";\nimport { setContext } from 'apollo-link-context';\n\nconst httpLink = createUploadLink({\n  uri: `https://fast-eyrie-13923.herokuapp.com/graphql`,\n});\n\nconst authLink = setContext(() => {\n  const token = localStorage.getItem('jwtToken')\n  return{\n    headers:{\n      Authorization: token ? `Bearer ${token}` : ''\n    }\n  }\n})\n\nconst client = new ApolloClient({\n  link: ApolloLink.from([\n    // Report errors to console in a user friendly format\n    onError(({ graphQLErrors, networkError }) => {\n      if (graphQLErrors)\n        graphQLErrors.map(({ message, locations, path }) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n          )\n        );\n      if (networkError) console.log(`[Network error]: ${networkError}`);\n    }),\n   authLink.concat(httpLink) ,\n  ]),\n  cache: new InMemoryCache(),\n});\n\nexport default (\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);\n"]},"metadata":{},"sourceType":"module"}